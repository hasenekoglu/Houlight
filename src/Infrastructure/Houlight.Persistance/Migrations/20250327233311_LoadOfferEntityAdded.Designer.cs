// <auto-generated />
using System;
using Houlight.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Houlight.Persistence.Migrations
{
    [DbContext(typeof(HoulightDbContext))]
    [Migration("20250327233311_LoadOfferEntityAdded")]
    partial class LoadOfferEntityAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Houlight.Domain.Entities.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Houlight.Domain.Entities.DriverEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LogisticsCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LogisticsCompanyId");

                    b.ToTable("Drivers", (string)null);
                });

            modelBuilder.Entity("Houlight.Domain.Entities.LoadEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CompanyOfferedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CustomerExpectedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FromLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LogisticsCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDriverId");

                    b.HasIndex("AssignedVehicleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LogisticsCompanyId");

                    b.ToTable("Loads", (string)null);
                });

            modelBuilder.Entity("Houlight.Domain.Entities.LoadOfferEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CompanyOfferedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CustomerExpectedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FromLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LoadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoadType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LogisticsCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDriverId");

                    b.HasIndex("AssignedVehicleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LoadId");

                    b.HasIndex("LogisticsCompanyId");

                    b.ToTable("LoadOffers", (string)null);
                });

            modelBuilder.Entity("Houlight.Domain.Entities.LogisticsCompanyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LogisticsCompanies", (string)null);
                });

            modelBuilder.Entity("Houlight.Domain.Entities.VehicleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentVolume")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogisticsCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDriverId");

                    b.HasIndex("LogisticsCompanyId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("Houlight.Domain.Entities.VehicleTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes", (string)null);
                });

            modelBuilder.Entity("Houlight.Domain.Entities.DriverEntity", b =>
                {
                    b.HasOne("Houlight.Domain.Entities.LogisticsCompanyEntity", "LogisticsCompanyEntity")
                        .WithMany("DriverEntities")
                        .HasForeignKey("LogisticsCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogisticsCompanyEntity");
                });

            modelBuilder.Entity("Houlight.Domain.Entities.LoadEntity", b =>
                {
                    b.HasOne("Houlight.Domain.Entities.DriverEntity", "DriverEntity")
                        .WithMany()
                        .HasForeignKey("AssignedDriverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Houlight.Domain.Entities.VehicleEntity", "VehicleEntity")
                        .WithMany()
                        .HasForeignKey("AssignedVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Houlight.Domain.Entities.CustomerEntity", "CustomerEntity")
                        .WithMany("LoadEntities")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Houlight.Domain.Entities.LogisticsCompanyEntity", "LogisticsCompanyEntity")
                        .WithMany()
                        .HasForeignKey("LogisticsCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CustomerEntity");

                    b.Navigation("DriverEntity");

                    b.Navigation("LogisticsCompanyEntity");

                    b.Navigation("VehicleEntity");
                });

            modelBuilder.Entity("Houlight.Domain.Entities.LoadOfferEntity", b =>
                {
                    b.HasOne("Houlight.Domain.Entities.DriverEntity", "DriverEntity")
                        .WithMany()
                        .HasForeignKey("AssignedDriverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Houlight.Domain.Entities.VehicleEntity", "VehicleEntity")
                        .WithMany()
                        .HasForeignKey("AssignedVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Houlight.Domain.Entities.CustomerEntity", "CustomerEntity")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Houlight.Domain.Entities.LoadEntity", "LoadEntity")
                        .WithMany("LoadOffers")
                        .HasForeignKey("LoadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Houlight.Domain.Entities.LogisticsCompanyEntity", "LogisticsCompanyEntity")
                        .WithMany()
                        .HasForeignKey("LogisticsCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomerEntity");

                    b.Navigation("DriverEntity");

                    b.Navigation("LoadEntity");

                    b.Navigation("LogisticsCompanyEntity");

                    b.Navigation("VehicleEntity");
                });

            modelBuilder.Entity("Houlight.Domain.Entities.VehicleEntity", b =>
                {
                    b.HasOne("Houlight.Domain.Entities.DriverEntity", "AssignedDriver")
                        .WithMany()
                        .HasForeignKey("AssignedDriverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Houlight.Domain.Entities.LogisticsCompanyEntity", "LogisticsCompanyEntity")
                        .WithMany("VehicleEntities")
                        .HasForeignKey("LogisticsCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Houlight.Domain.Entities.VehicleTypeEntity", "VehicleTypeEntity")
                        .WithMany("VehicleEntities")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedDriver");

                    b.Navigation("LogisticsCompanyEntity");

                    b.Navigation("VehicleTypeEntity");
                });

            modelBuilder.Entity("Houlight.Domain.Entities.CustomerEntity", b =>
                {
                    b.Navigation("LoadEntities");
                });

            modelBuilder.Entity("Houlight.Domain.Entities.LoadEntity", b =>
                {
                    b.Navigation("LoadOffers");
                });

            modelBuilder.Entity("Houlight.Domain.Entities.LogisticsCompanyEntity", b =>
                {
                    b.Navigation("DriverEntities");

                    b.Navigation("VehicleEntities");
                });

            modelBuilder.Entity("Houlight.Domain.Entities.VehicleTypeEntity", b =>
                {
                    b.Navigation("VehicleEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
